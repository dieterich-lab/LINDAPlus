print(Sys.getenv('DATA_FILE'))
ui <- dashboardPage(
dashboardHeader(title = "My App"),
dashboardSidebar(
width = 350,
fileInput(
'file1',
'Upload Items List',
accept = c('text/csv',
'text/comma-separated-values,text/plain',
'.csv')
),
fluidRow(column(
width = 2,
offset = 1,
actionButton("goButton", "Submit")
)),
br(),
br(),
uiOutput("FirstOutput"),
uiOutput("SecondOutput"),
uiOutput("ThirdOutput"),
uiOutput("FourthOutput"),
uiOutput("FifthOutput"),
fluidRow(column(
width = 2,
offset = 1,
downloadButton('downloadData', 'Download')))
),
dashboardBody(
tags$style(
type = "text/css",
".shiny-output-error { visibility: hidden; }",
".shiny-output-error:before { visibility: hidden; }"
),
tabsetPanel(
type = "tabs",
tabPanel("1", fluidRow(box(
plotlyOutput("pie1")
),
box(
plotlyOutput("barplot1")
)),
fluidRow(box(
plotlyOutput(outputId = "barplot2")
))),
tabPanel("2",
div(style = 'overflow-x: scroll', dataTableOutput("contents"))
)
)
)
)
# loading libraries -------------------------------------------------------
library(shiny)
library(future)
library(promises)
library(ggrepel)
#plan(multisession)
library(shinycssloaders)
library(shinyjs)
library(plotly, warn.conflicts = FALSE)
library(reactable, warn.conflicts = FALSE)
library(bs4Dash, warn.conflicts = FALSE)
library(shinydashboard, warn.conflicts = FALSE)
library(visNetwork, warn.conflicts = FALSE)
library(rintrojs, warn.conflicts = FALSE)
library(shinyBS, warn.conflicts = FALSE)
library(igraph)
library(dplyr, warn.conflicts = FALSE)
library(tidyr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
#options(spinner.type = 6)
# loading libraries -------------------------------------------------------
library(shiny)
library(future)
library(promises)
library(heatmaply)
#plan(multisession)
library(shinycssloaders)
library(shinyjs)
library(plotly, warn.conflicts = FALSE)
library(reactable, warn.conflicts = FALSE)
library(bs4Dash, warn.conflicts = FALSE)
library(shinydashboard, warn.conflicts = FALSE)
library(visNetwork, warn.conflicts = FALSE)
library(rintrojs, warn.conflicts = FALSE)
library(shinyBS, warn.conflicts = FALSE)
library(igraph)
library(dplyr, warn.conflicts = FALSE)
library(tidyr, warn.conflicts = FALSE)
library(ggplot2, warn.conflicts = FALSE)
ui <- dashboardPage(
dashboardHeader(title = "My App"),
dashboardSidebar(
width = 350,
fileInput(
'file1',
'Upload Items List',
accept = c('text/csv',
'text/comma-separated-values,text/plain',
'.csv')
),
fluidRow(column(
width = 2,
offset = 1,
actionButton("goButton", "Submit")
)),
br(),
br(),
uiOutput("FirstOutput"),
uiOutput("SecondOutput"),
uiOutput("ThirdOutput"),
uiOutput("FourthOutput"),
uiOutput("FifthOutput"),
fluidRow(column(
width = 2,
offset = 1,
downloadButton('downloadData', 'Download')))
),
dashboardBody(
tags$style(
type = "text/css",
".shiny-output-error { visibility: hidden; }",
".shiny-output-error:before { visibility: hidden; }"
),
tabsetPanel(
type = "tabs",
tabPanel("1", fluidRow(box(
plotlyOutput("pie1")
),
box(
plotlyOutput("barplot1")
)),
fluidRow(box(
plotlyOutput(outputId = "barplot2")
))),
tabPanel("2",
div(style = 'overflow-x: scroll', dataTableOutput("contents"))
)
)
)
)
setwd("/home/enio/Downloads/LINDA_Plus_Dev/Package/Dev1_Man/LINDAPlus/vignettes/")
unlink('LINDA_cache', recursive = TRUE)
